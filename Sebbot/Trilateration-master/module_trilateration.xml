<?xml version="1.0" encoding="UTF-8"?>
<project name="module_trilateration" default="compile.module.trilateration">
  <dirname property="module.trilateration.basedir" file="${ant.file.module_trilateration}"/>
  
  <property name="module.jdk.home.trilateration" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.trilateration" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.trilateration" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.trilateration" value="-encoding windows-1252 -source 8 ${compiler.args}"/>
  
  <property name="trilateration.output.dir" value="${module.trilateration.basedir}/build/classes/main"/>
  <property name="trilateration.testoutput.dir" value="${module.trilateration.basedir}/build/classes/test"/>
  
  <path id="trilateration.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="trilateration.module.production.classpath">
    <path refid="${module.jdk.classpath.trilateration}"/>
    <path refid="library.gradle:_org.apache.commons:commons-math3:3.5.classpath"/>
  </path>
  
  <path id="trilateration.runtime.production.module.classpath">
    <pathelement location="${trilateration.output.dir}"/>
    <path refid="library.gradle:_org.apache.commons:commons-math3:3.5.classpath"/>
  </path>
  
  <path id="trilateration.module.classpath">
    <path refid="${module.jdk.classpath.trilateration}"/>
    <pathelement location="${trilateration.output.dir}"/>
    <path refid="library.gradle:_org.apache.commons:commons-math3:3.5.classpath"/>
    <path refid="library.gradle:_junit:junit:4.12.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  <path id="trilateration.runtime.module.classpath">
    <pathelement location="${trilateration.testoutput.dir}"/>
    <pathelement location="${trilateration.output.dir}"/>
    <path refid="library.gradle:_org.apache.commons:commons-math3:3.5.classpath"/>
    <path refid="library.gradle:_junit:junit:4.12.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.trilateration">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.trilateration">
    <patternset refid="excluded.from.module.trilateration"/>
  </patternset>
  
  <path id="trilateration.module.sourcepath">
    <dirset dir="${module.trilateration.basedir}">
      <include name="src/main/java"/>
    </dirset>
  </path>
  
  <path id="trilateration.module.test.sourcepath">
    <dirset dir="${module.trilateration.basedir}">
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.trilateration" depends="compile.module.trilateration.production,compile.module.trilateration.tests" description="Compile module Trilateration"/>
  
  <target name="compile.module.trilateration.production" depends="register.custom.compilers" description="Compile module Trilateration; production classes">
    <mkdir dir="${trilateration.output.dir}"/>
    <javac2 destdir="${trilateration.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.trilateration}/javac">
      <compilerarg line="${compiler.args.trilateration}"/>
      <bootclasspath refid="trilateration.module.bootclasspath"/>
      <classpath refid="trilateration.module.production.classpath"/>
      <src refid="trilateration.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.trilateration"/>
    </javac2>
    
    <copy todir="${trilateration.output.dir}">
      <fileset dir="${module.trilateration.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.trilateration.tests" depends="register.custom.compilers,compile.module.trilateration.production" description="compile module Trilateration; test classes" unless="skip.tests">
    <mkdir dir="${trilateration.testoutput.dir}"/>
    <javac2 destdir="${trilateration.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.trilateration}/javac">
      <compilerarg line="${compiler.args.trilateration}"/>
      <bootclasspath refid="trilateration.module.bootclasspath"/>
      <classpath refid="trilateration.module.classpath"/>
      <src refid="trilateration.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.trilateration"/>
    </javac2>
    
    <copy todir="${trilateration.testoutput.dir}">
      <fileset dir="${module.trilateration.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.trilateration" description="cleanup module">
    <delete dir="${trilateration.output.dir}"/>
    <delete dir="${trilateration.testoutput.dir}"/>
  </target>
</project>